"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const Lexeme_1 = require("./Lexeme");
/**
 * The set of all reserved words in the reference BrightScript runtime. These can't be used for any
 * other purpose within a BrightScript file.
 * @see https://sdkdocs.roku.com/display/sdkdoc/Reserved+Words
 */
exports.ReservedWords = new Set([
    "and",
    "box",
    "createobject",
    "dim",
    "each",
    "else",
    "elseif",
    "endsub",
    "endwhile",
    "eval",
    "exit",
    "exitwhile",
    "false",
    "for",
    "function",
    "getglobalaa",
    "getlastruncompileerror",
    "getlastrunruntimeerror",
    "goto",
    "if",
    "invalid",
    "let",
    "line_num",
    "next",
    "not",
    "objfun",
    "or",
    "pos",
    "print",
    "rem",
    "return",
    "run",
    "step",
    "stop",
    "sub",
    "tab",
    "then",
    "to",
    "true",
    "type",
    "while",
]);
/**
 * The set of keywords in the reference BrightScript runtime. Any of these that *are not* reserved
 * words can be used within a BrightScript file for other purposes, e.g. `tab`.
 *
 * Unfortunately there's no canonical source for this!
 */
exports.KeyWords = {
    and: Lexeme_1.Lexeme.And,
    dim: Lexeme_1.Lexeme.Dim,
    else: Lexeme_1.Lexeme.Else,
    elseif: Lexeme_1.Lexeme.ElseIf,
    "else if": Lexeme_1.Lexeme.ElseIf,
    endfor: Lexeme_1.Lexeme.EndFor,
    "end for": Lexeme_1.Lexeme.EndFor,
    endfunction: Lexeme_1.Lexeme.EndFunction,
    "end function": Lexeme_1.Lexeme.EndFunction,
    endif: Lexeme_1.Lexeme.EndIf,
    "end if": Lexeme_1.Lexeme.EndIf,
    endsub: Lexeme_1.Lexeme.EndSub,
    "end sub": Lexeme_1.Lexeme.EndSub,
    endwhile: Lexeme_1.Lexeme.EndWhile,
    "end while": Lexeme_1.Lexeme.EndWhile,
    exit: Lexeme_1.Lexeme.Exit,
    "exit for": Lexeme_1.Lexeme.ExitFor,
    exitwhile: Lexeme_1.Lexeme.ExitWhile,
    "exit while": Lexeme_1.Lexeme.ExitWhile,
    false: Lexeme_1.Lexeme.False,
    for: Lexeme_1.Lexeme.For,
    "for each": Lexeme_1.Lexeme.ForEach,
    function: Lexeme_1.Lexeme.Function,
    goto: Lexeme_1.Lexeme.Goto,
    if: Lexeme_1.Lexeme.If,
    invalid: Lexeme_1.Lexeme.Invalid,
    let: Lexeme_1.Lexeme.Let,
    mod: Lexeme_1.Lexeme.Mod,
    next: Lexeme_1.Lexeme.Next,
    not: Lexeme_1.Lexeme.Not,
    or: Lexeme_1.Lexeme.Or,
    print: Lexeme_1.Lexeme.Print,
    rem: Lexeme_1.Lexeme.Rem,
    return: Lexeme_1.Lexeme.Return,
    step: Lexeme_1.Lexeme.Step,
    stop: Lexeme_1.Lexeme.Stop,
    sub: Lexeme_1.Lexeme.Sub,
    to: Lexeme_1.Lexeme.To,
    true: Lexeme_1.Lexeme.True,
    while: Lexeme_1.Lexeme.While,
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiUmVzZXJ2ZWRXb3Jkcy5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9sZXhlci9SZXNlcnZlZFdvcmRzLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBQUEscUNBQXVDO0FBRXZDOzs7O0dBSUc7QUFDVSxRQUFBLGFBQWEsR0FBRyxJQUFJLEdBQUcsQ0FBQztJQUNqQyxLQUFLO0lBQ0wsS0FBSztJQUNMLGNBQWM7SUFDZCxLQUFLO0lBQ0wsTUFBTTtJQUNOLE1BQU07SUFDTixRQUFRO0lBQ1IsUUFBUTtJQUNSLFVBQVU7SUFDVixNQUFNO0lBQ04sTUFBTTtJQUNOLFdBQVc7SUFDWCxPQUFPO0lBQ1AsS0FBSztJQUNMLFVBQVU7SUFDVixhQUFhO0lBQ2Isd0JBQXdCO0lBQ3hCLHdCQUF3QjtJQUN4QixNQUFNO0lBQ04sSUFBSTtJQUNKLFNBQVM7SUFDVCxLQUFLO0lBQ0wsVUFBVTtJQUNWLE1BQU07SUFDTixLQUFLO0lBQ0wsUUFBUTtJQUNSLElBQUk7SUFDSixLQUFLO0lBQ0wsT0FBTztJQUNQLEtBQUs7SUFDTCxRQUFRO0lBQ1IsS0FBSztJQUNMLE1BQU07SUFDTixNQUFNO0lBQ04sS0FBSztJQUNMLEtBQUs7SUFDTCxNQUFNO0lBQ04sSUFBSTtJQUNKLE1BQU07SUFDTixNQUFNO0lBQ04sT0FBTztDQUNWLENBQUMsQ0FBQztBQUVIOzs7OztHQUtHO0FBQ1UsUUFBQSxRQUFRLEdBQXlCO0lBQzFDLEdBQUcsRUFBRSxlQUFDLENBQUMsR0FBRztJQUNWLEdBQUcsRUFBRSxlQUFDLENBQUMsR0FBRztJQUNWLElBQUksRUFBRSxlQUFDLENBQUMsSUFBSTtJQUNaLE1BQU0sRUFBRSxlQUFDLENBQUMsTUFBTTtJQUNoQixTQUFTLEVBQUUsZUFBQyxDQUFDLE1BQU07SUFDbkIsTUFBTSxFQUFFLGVBQUMsQ0FBQyxNQUFNO0lBQ2hCLFNBQVMsRUFBRSxlQUFDLENBQUMsTUFBTTtJQUNuQixXQUFXLEVBQUUsZUFBQyxDQUFDLFdBQVc7SUFDMUIsY0FBYyxFQUFFLGVBQUMsQ0FBQyxXQUFXO0lBQzdCLEtBQUssRUFBRSxlQUFDLENBQUMsS0FBSztJQUNkLFFBQVEsRUFBRSxlQUFDLENBQUMsS0FBSztJQUNqQixNQUFNLEVBQUUsZUFBQyxDQUFDLE1BQU07SUFDaEIsU0FBUyxFQUFFLGVBQUMsQ0FBQyxNQUFNO0lBQ25CLFFBQVEsRUFBRSxlQUFDLENBQUMsUUFBUTtJQUNwQixXQUFXLEVBQUUsZUFBQyxDQUFDLFFBQVE7SUFDdkIsSUFBSSxFQUFFLGVBQUMsQ0FBQyxJQUFJO0lBQ1osVUFBVSxFQUFFLGVBQUMsQ0FBQyxPQUFPO0lBQ3JCLFNBQVMsRUFBRSxlQUFDLENBQUMsU0FBUztJQUN0QixZQUFZLEVBQUUsZUFBQyxDQUFDLFNBQVM7SUFDekIsS0FBSyxFQUFFLGVBQUMsQ0FBQyxLQUFLO0lBQ2QsR0FBRyxFQUFFLGVBQUMsQ0FBQyxHQUFHO0lBQ1YsVUFBVSxFQUFFLGVBQUMsQ0FBQyxPQUFPO0lBQ3JCLFFBQVEsRUFBRSxlQUFDLENBQUMsUUFBUTtJQUNwQixJQUFJLEVBQUUsZUFBQyxDQUFDLElBQUk7SUFDWixFQUFFLEVBQUUsZUFBQyxDQUFDLEVBQUU7SUFDUixPQUFPLEVBQUUsZUFBQyxDQUFDLE9BQU87SUFDbEIsR0FBRyxFQUFFLGVBQUMsQ0FBQyxHQUFHO0lBQ1YsR0FBRyxFQUFFLGVBQUMsQ0FBQyxHQUFHO0lBQ1YsSUFBSSxFQUFFLGVBQUMsQ0FBQyxJQUFJO0lBQ1osR0FBRyxFQUFFLGVBQUMsQ0FBQyxHQUFHO0lBQ1YsRUFBRSxFQUFFLGVBQUMsQ0FBQyxFQUFFO0lBQ1IsS0FBSyxFQUFFLGVBQUMsQ0FBQyxLQUFLO0lBQ2QsR0FBRyxFQUFFLGVBQUMsQ0FBQyxHQUFHO0lBQ1YsTUFBTSxFQUFFLGVBQUMsQ0FBQyxNQUFNO0lBQ2hCLElBQUksRUFBRSxlQUFDLENBQUMsSUFBSTtJQUNaLElBQUksRUFBRSxlQUFDLENBQUMsSUFBSTtJQUNaLEdBQUcsRUFBRSxlQUFDLENBQUMsR0FBRztJQUNWLEVBQUUsRUFBRSxlQUFDLENBQUMsRUFBRTtJQUNSLElBQUksRUFBRSxlQUFDLENBQUMsSUFBSTtJQUNaLEtBQUssRUFBRSxlQUFDLENBQUMsS0FBSztDQUNqQixDQUFDIn0=