"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
class Binary {
    constructor(left, token, right) {
        this.left = left;
        this.token = token;
        this.right = right;
    }
    accept(visitor) {
        return visitor.visitBinary(this);
    }
    get location() {
        return {
            file: this.token.location.file,
            start: this.left.location.start,
            end: this.right.location.end,
        };
    }
}
exports.Binary = Binary;
class Call {
    constructor(callee, closingParen, args) {
        this.callee = callee;
        this.closingParen = closingParen;
        this.args = args;
    }
    accept(visitor) {
        return visitor.visitCall(this);
    }
    get location() {
        return {
            file: this.closingParen.location.file,
            start: this.callee.location.start,
            end: this.closingParen.location.end,
        };
    }
}
Call.MaximumArguments = 32;
exports.Call = Call;
class Function {
    constructor(parameters, returns, body, keyword, end) {
        this.parameters = parameters;
        this.returns = returns;
        this.body = body;
        this.keyword = keyword;
        this.end = end;
    }
    accept(visitor) {
        return visitor.visitAnonymousFunction(this);
    }
    get location() {
        return {
            file: this.keyword.location.file,
            start: this.keyword.location.start,
            end: this.end.location.end,
        };
    }
}
exports.Function = Function;
class DottedGet {
    constructor(obj, name) {
        this.obj = obj;
        this.name = name;
    }
    accept(visitor) {
        return visitor.visitDottedGet(this);
    }
    get location() {
        return {
            file: this.obj.location.file,
            start: this.obj.location.start,
            end: this.name.location.end,
        };
    }
}
exports.DottedGet = DottedGet;
class IndexedGet {
    constructor(obj, index, closingSquare) {
        this.obj = obj;
        this.index = index;
        this.closingSquare = closingSquare;
    }
    accept(visitor) {
        return visitor.visitIndexedGet(this);
    }
    get location() {
        return {
            file: this.obj.location.file,
            start: this.obj.location.start,
            end: this.closingSquare.location.end,
        };
    }
}
exports.IndexedGet = IndexedGet;
class Grouping {
    constructor(tokens, expression) {
        this.tokens = tokens;
        this.expression = expression;
    }
    accept(visitor) {
        return visitor.visitGrouping(this);
    }
    get location() {
        return {
            file: this.tokens.left.location.file,
            start: this.tokens.left.location.start,
            end: this.tokens.right.location.end,
        };
    }
}
exports.Grouping = Grouping;
class Literal {
    constructor(value, _location) {
        this.value = value;
        this._location = _location;
    }
    accept(visitor) {
        return visitor.visitLiteral(this);
    }
    get location() {
        return (this._location || {
            file: "(internal)",
            start: {
                line: -1,
                column: -1,
            },
            end: {
                line: -1,
                column: -1,
            },
        });
    }
}
exports.Literal = Literal;
class ArrayLiteral {
    constructor(elements, open, close) {
        this.elements = elements;
        this.open = open;
        this.close = close;
    }
    accept(visitor) {
        return visitor.visitArrayLiteral(this);
    }
    get location() {
        return {
            file: this.open.location.file,
            start: this.open.location.start,
            end: this.close.location.end,
        };
    }
}
exports.ArrayLiteral = ArrayLiteral;
class AALiteral {
    constructor(elements, open, close) {
        this.elements = elements;
        this.open = open;
        this.close = close;
    }
    accept(visitor) {
        return visitor.visitAALiteral(this);
    }
    get location() {
        return {
            file: this.open.location.file,
            start: this.open.location.start,
            end: this.close.location.end,
        };
    }
}
exports.AALiteral = AALiteral;
class Unary {
    constructor(operator, right) {
        this.operator = operator;
        this.right = right;
    }
    accept(visitor) {
        return visitor.visitUnary(this);
    }
    get location() {
        return {
            file: this.operator.location.file,
            start: this.operator.location.start,
            end: this.right.location.end,
        };
    }
}
exports.Unary = Unary;
class Variable {
    constructor(name) {
        this.name = name;
    }
    accept(visitor) {
        return visitor.visitVariable(this);
    }
    get location() {
        return this.name.location;
    }
}
exports.Variable = Variable;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiRXhwcmVzc2lvbi5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9wYXJzZXIvRXhwcmVzc2lvbi50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQStCQSxNQUFhLE1BQU07SUFDZixZQUFxQixJQUFnQixFQUFXLEtBQVksRUFBVyxLQUFpQjtRQUFuRSxTQUFJLEdBQUosSUFBSSxDQUFZO1FBQVcsVUFBSyxHQUFMLEtBQUssQ0FBTztRQUFXLFVBQUssR0FBTCxLQUFLLENBQVk7SUFBRyxDQUFDO0lBRTVGLE1BQU0sQ0FBSSxPQUFtQjtRQUN6QixPQUFPLE9BQU8sQ0FBQyxXQUFXLENBQUMsSUFBSSxDQUFDLENBQUM7SUFDckMsQ0FBQztJQUVELElBQUksUUFBUTtRQUNSLE9BQU87WUFDSCxJQUFJLEVBQUUsSUFBSSxDQUFDLEtBQUssQ0FBQyxRQUFRLENBQUMsSUFBSTtZQUM5QixLQUFLLEVBQUUsSUFBSSxDQUFDLElBQUksQ0FBQyxRQUFRLENBQUMsS0FBSztZQUMvQixHQUFHLEVBQUUsSUFBSSxDQUFDLEtBQUssQ0FBQyxRQUFRLENBQUMsR0FBRztTQUMvQixDQUFDO0lBQ04sQ0FBQztDQUNKO0FBZEQsd0JBY0M7QUFFRCxNQUFhLElBQUk7SUFHYixZQUNhLE1BQWtCLEVBQ2xCLFlBQW1CLEVBQ25CLElBQWtCO1FBRmxCLFdBQU0sR0FBTixNQUFNLENBQVk7UUFDbEIsaUJBQVksR0FBWixZQUFZLENBQU87UUFDbkIsU0FBSSxHQUFKLElBQUksQ0FBYztJQUM1QixDQUFDO0lBRUosTUFBTSxDQUFJLE9BQW1CO1FBQ3pCLE9BQU8sT0FBTyxDQUFDLFNBQVMsQ0FBQyxJQUFJLENBQUMsQ0FBQztJQUNuQyxDQUFDO0lBRUQsSUFBSSxRQUFRO1FBQ1IsT0FBTztZQUNILElBQUksRUFBRSxJQUFJLENBQUMsWUFBWSxDQUFDLFFBQVEsQ0FBQyxJQUFJO1lBQ3JDLEtBQUssRUFBRSxJQUFJLENBQUMsTUFBTSxDQUFDLFFBQVEsQ0FBQyxL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