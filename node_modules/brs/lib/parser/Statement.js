"use strict";
function __export(m) {
    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];
}
Object.defineProperty(exports, "__esModule", { value: true });
/** A set of reasons why a `Block` stopped executing. */
__export(require("./BlockEndReason"));
class Assignment {
    constructor(tokens, name, value) {
        this.tokens = tokens;
        this.name = name;
        this.value = value;
    }
    accept(visitor) {
        return visitor.visitAssignment(this);
    }
    get location() {
        return {
            file: this.name.location.file,
            start: this.name.location.start,
            end: this.value.location.end,
        };
    }
}
exports.Assignment = Assignment;
class Block {
    constructor(statements, startingLocation) {
        this.statements = statements;
        this.startingLocation = startingLocation;
    }
    accept(visitor) {
        return visitor.visitBlock(this);
    }
    get location() {
        let end = this.statements.length
            ? this.statements[this.statements.length - 1].location.end
            : this.startingLocation.start;
        return {
            file: this.startingLocation.file,
            start: this.startingLocation.start,
            end: end,
        };
    }
}
exports.Block = Block;
class Expression {
    constructor(expression) {
        this.expression = expression;
    }
    accept(visitor) {
        return visitor.visitExpression(this);
    }
    get location() {
        return this.expression.location;
    }
}
exports.Expression = Expression;
class ExitFor {
    constructor(tokens) {
        this.tokens = tokens;
    }
    accept(visitor) {
        return visitor.visitExitFor(this);
    }
    get location() {
        return this.tokens.exitFor.location;
    }
}
exports.ExitFor = ExitFor;
class ExitWhile {
    constructor(tokens) {
        this.tokens = tokens;
    }
    accept(visitor) {
        return visitor.visitExitWhile(this);
    }
    get location() {
        return this.tokens.exitWhile.location;
    }
}
exports.ExitWhile = ExitWhile;
class Function {
    constructor(name, func) {
        this.name = name;
        this.func = func;
    }
    accept(visitor) {
        return visitor.visitNamedFunction(this);
    }
    get location() {
        return {
            file: this.name.location.file,
            start: this.func.location.start,
            end: this.func.location.end,
        };
    }
}
exports.Function = Function;
class If {
    constructor(tokens, condition, thenBranch, elseIfs, elseBranch) {
        this.tokens = tokens;
        this.condition = condition;
        this.thenBranch = thenBranch;
        this.elseIfs = elseIfs;
        this.elseBranch = elseBranch;
    }
    accept(visitor) {
        return visitor.visitIf(this);
    }
    getEndLocation() {
        if (this.tokens.endIf) {
            return this.tokens.endIf.location;
        }
        else if (this.elseBranch) {
            return this.elseBranch.location;
        }
        else if (this.elseIfs.length) {
            return this.elseIfs[this.elseIfs.length - 1].thenBranch.location;
        }
        else {
            return this.thenBranch.location;
        }
    }
    get location() {
        return {
            file: this.tokens.if.location.file,
            start: this.tokens.if.location.start,
            end: this.getEndLocation().end,
        };
    }
}
exports.If = If;
class Increment {
    constructor(value, token) {
        this.value = value;
        this.token = token;
    }
    accept(visitor) {
        return visitor.visitIncrement(this);
    }
    get location() {
        return {
            file: this.value.location.file,
            start: this.value.location.start,
            end: this.token.location.end,
        };
    }
}
exports.Increment = Increment;
/**
 * Represents a `print` statement within BrightScript.
 */
class Print {
    /**
     * Creates a new internal representation of a BrightScript `print` statement.
     * @param expressions an array of expressions or `PrintSeparator`s to be
     *                    evaluated and printed.
     */
    constructor(tokens, expressions) {
        this.tokens = tokens;
        this.expressions = expressions;
    }
    accept(visitor) {
        return visitor.visitPrint(this);
    }
    get location() {
        let end = this.expressions.length
            ? this.expressions[this.expressions.length - 1].location.end
            : this.tokens.print.location.end;
        return {
            file: this.tokens.print.location.file,
            start: this.tokens.print.location.start,
            end: end,
        };
    }
}
exports.Print = Print;
class Goto {
    constructor(tokens) {
        this.tokens = tokens;
    }
    accept(visitor) {
        //should search the code for the corresponding label, and set that as the next line to execute
        throw new Error("Not implemented");
    }
    get location() {
        return {
            file: this.tokens.goto.location.file,
            start: this.tokens.goto.location.start,
            end: this.tokens.label.location.end,
        };
    }
}
exports.Goto = Goto;
class Label {
    constructor(tokens) {
        this.tokens = tokens;
    }
    accept(visitor) {
        throw new Error("Not implemented");
    }
    get location() {
        return {
            file: this.tokens.identifier.location.file,
            start: this.tokens.identifier.location.start,
            end: this.tokens.colon.location.end,
        };
    }
}
exports.Label = Label;
class Return {
    constructor(tokens, value) {
        this.tokens = tokens;
        this.value = value;
    }
    accept(visitor) {
        return visitor.visitReturn(this);
    }
    get location() {
        return {
            file: this.tokens.return.location.file,
            start: this.tokens.return.location.start,
            end: (this.value && this.value.location.end) || this.tokens.return.location.end,
        };
    }
}
exports.Return = Return;
class End {
    constructor(tokens) {
        this.tokens = tokens;
    }
    accept(visitor) {
        //TODO implement this in the runtime. It should immediately terminate program execution, without error
        throw new Error("Not implemented");
    }
    get location() {
        return {
            file: this.tokens.end.location.file,
            start: this.tokens.end.location.start,
            end: this.tokens.end.location.end,
        };
    }
}
exports.End = End;
class Stop {
    constructor(tokens) {
        this.tokens = tokens;
    }
    accept(visitor) {
        //TODO implement this in the runtime. It should pause code execution until a `c` command is issued from the console
        throw new Error("Not implemented");
    }
    get location() {
        return {
            file: this.tokens.stop.location.file,
            start: this.tokens.stop.location.start,
            end: this.tokens.stop.location.end,
        };
    }
}
exports.Stop = Stop;
class For {
    constructor(tokens, counterDeclaration, finalValue, increment, body) {
        this.tokens = tokens;
        this.counterDeclaration = counterDeclaration;
        this.finalValue = finalValue;
        this.increment = increment;
        this.body = body;
    }
    accept(visitor) {
        return visitor.visitFor(this);
    }
    get location() {
        return {
            file: this.tokens.for.location.file,
            start: this.tokens.for.location.start,
            end: this.tokens.endFor.location.end,
        };
    }
}
exports.For = For;
class ForEach {
    constructor(tokens, item, target, body) {
        this.tokens = tokens;
        this.item = item;
        this.target = target;
        this.body = body;
    }
    accept(visitor) {
        return visitor.visitForEach(this);
    }
    get location() {
        return {
            file: this.tokens.forEach.location.file,
            start: this.tokens.forEach.location.start,
            end: this.tokens.endFor.location.end,
        };
    }
}
exports.ForEach = ForEach;
class While {
    constructor(tokens, condition, body) {
        this.tokens = tokens;
        this.condition = condition;
        this.body = body;
    }
    accept(visitor) {
        return visitor.visitWhile(this);
    }
    get location() {
        return {
            file: this.tokens.while.location.file,
            start: this.tokens.while.location.start,
            end: this.tokens.endWhile.location.end,
        };
    }
}
exports.While = While;
class DottedSet {
    constructor(obj, name, value) {
        this.obj = obj;
        this.name = name;
        this.value = value;
    }
    accept(visitor) {
        return visitor.visitDottedSet(this);
    }
    get location() {
        return {
            file: this.obj.location.file,
            start: this.obj.location.start,
            end: this.value.location.end,
        };
    }
}
exports.DottedSet = DottedSet;
class IndexedSet {
    constructor(obj, index, value, closingSquare) {
        this.obj = obj;
        this.index = index;
        this.value = value;
        this.closingSquare = closingSquare;
    }
    accept(visitor) {
        return visitor.visitIndexedSet(this);
    }
    get location() {
        return {
            file: this.obj.location.file,
            start: this.obj.location.start,
            end: this.value.location.end,
        };
    }
}
exports.IndexedSet = IndexedSet;
class Library {
    constructor(tokens) {
        this.tokens = tokens;
    }
    accept(visitor) {
        throw new Error("Library is not implemented");
    }
    get location() {
        return {
            file: this.tokens.library.location.file,
            start: this.tokens.library.location.start,
            end: this.tokens.filePath
                ? this.tokens.filePath.location.end
                : this.tokens.library.location.end,
        };
    }
}
exports.Library = Library;
//# sourceMappingURL=data:application/json;base64,