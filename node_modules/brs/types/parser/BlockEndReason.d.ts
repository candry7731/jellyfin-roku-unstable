import { BrsError } from "../Error";
import { Location } from "../lexer";
/** Marker class for errors thrown to exit block execution early. */
export declare class BlockEnd extends BrsError {
}
/** An error thrown to exit a for loop early. */
export declare class ExitForReason extends BlockEnd {
    constructor(location: Location);
}
/** An error thrown to exit a while loop early. */
export declare class ExitWhileReason extends BlockEnd {
    constructor(location: Location);
}
/** An error thrown to handle a `return` statement. */
export declare class ReturnValue extends BlockEnd {
    readonly location: Location;
    readonly value?: import("../brsTypes").BrsInvalid | import("../brsTypes").BrsBoolean | import("../brsTypes").BrsString | import("../brsTypes").Int32 | import("../brsTypes").Int64 | import("../brsTypes").Float | import("../brsTypes").Double | import("../brsTypes").RoArray | import("../brsTypes").RoAssociativeArray | import("../brsTypes").Callable | import("../brsTypes").AllComponents | import("../brsTypes").Uninitialized | undefined;
    constructor(location: Location, value?: import("../brsTypes").BrsInvalid | import("../brsTypes").BrsBoolean | import("../brsTypes").BrsString | import("../brsTypes").Int32 | import("../brsTypes").Int64 | import("../brsTypes").Float | import("../brsTypes").Double | import("../brsTypes").RoArray | import("../brsTypes").RoAssociativeArray | import("../brsTypes").Callable | import("../brsTypes").AllComponents | import("../brsTypes").Uninitialized | undefined);
}
/** An error thrown when a BrightScript runtime error is encountered. */
export declare class Runtime extends BlockEnd {
}
