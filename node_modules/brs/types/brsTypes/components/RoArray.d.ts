import { BrsValue, ValueKind, BrsBoolean, BrsInvalid } from "../BrsType";
import { BrsType } from "..";
import { BrsComponent, BrsIterable } from "./BrsComponent";
import { Callable } from "../Callable";
import { Int32 } from "../Int32";
export declare class RoArray extends BrsComponent implements BrsValue, BrsIterable {
    readonly kind = ValueKind.Object;
    private elements;
    constructor(elements: BrsType[]);
    toString(parent?: BrsType): string;
    equalTo(other: BrsType): BrsBoolean;
    getValue(): BrsType[];
    getElements(): BrsType[];
    get(index: BrsType): BrsInvalid | BrsBoolean | import("..").BrsString | Int32 | import("..").Int64 | import("..").Float | import("..").Double | Callable | import("..").AllComponents | import("..").Uninitialized;
    set(index: BrsType, value: BrsType): BrsInvalid;
    private peek;
    private pop;
    private push;
    private shift;
    private unshift;
    private delete;
    private count;
    private clear;
    private append;
}
