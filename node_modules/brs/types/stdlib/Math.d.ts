import { Callable } from "../brsTypes";
/** Returns the absolute value of a float. */
export declare const Abs: Callable;
export declare const Cdbl: Callable;
/** Returns an integer from a float rounding up from midpoints */
export declare const Cint: Callable;
/** Returns the integer as a 32-bit float. */
export declare const Csng: Callable;
/** Returns an integer from a float removing fractional parts. */
export declare const Fix: Callable;
/** Returns an integer from a float. */
export declare const Int: Callable;
/** Returns -1 if parameter is negative, 0 if zero, and 1 if positive. */
export declare const Sgn: Callable;
/** Returns the arc-tangent (in radians) of a float. */
export declare const Atn: Callable;
/** Returns the cosine of a float (argument must be provided in radians). */
export declare const Cos: Callable;
/** Returns the sine of a float (argument must be provided in radians). */
export declare const Sin: Callable;
/** Returns the tangent float (argument must be provided in radians). */
export declare const Tan: Callable;
/** Returns the natural exponent of a float. */
export declare const Exp: Callable;
/** Returns the log of a float. */
export declare const Log: Callable;
/** Returns the square root of a float. */
export declare const Sqr: Callable;
/**
 * Returns a random number in a given range. If the range is zero, a random
 * float between [0,1) is returned. If the range is a positive number, a
 * random integer between 1 and that number is returned (inclusive is returned).
 *
 * **NOTE:** the float returned is in the range [0,1) to match the javascript
 *     implementation, while the brightscript specification calls for (0,1).
 *     This should be okay in practice, but if this is necessary a more complicated
 *     implementation will be necessary.
 */
export declare const Rnd: Callable;
