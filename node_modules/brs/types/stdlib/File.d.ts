/// <reference types="node" />
import { Callable } from "../brsTypes";
import { Interpreter } from "../interpreter";
import MemoryFileSystem from "memory-fs";
import * as fs from "fs";
declare type Volume = MemoryFileSystem | typeof fs;
export declare function getVolumeByPath(interpreter: Interpreter, path: string): Volume | null;
export declare function getPath(fileUri: string): string;
/** Copies a file from src to dst, return true if successful */
export declare const CopyFile: Callable;
/** Copies a file from src to dst, return true if successful */
export declare const MoveFile: Callable;
/** Deletes a file, return true if successful */
export declare const DeleteFile: Callable;
/** Deletes a directory (if empty), return true if successful */
export declare const DeleteDirectory: Callable;
/** Creates a directory, return true if successful */
export declare const CreateDirectory: Callable;
/** Stubbed function for formatting a drive; always returns false */
export declare const FormatDrive: Callable;
/** Returns an array of paths in a directory */
export declare const ListDir: Callable;
/** Reads ascii file from file system. */
export declare const ReadAsciiFile: Callable;
/** Writes a string to a temporary file. */
export declare const WriteAsciiFile: Callable;
/** Searches a directory for filenames that match a certain pattern. */
export declare const MatchFiles: Callable;
export {};
