"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var TestSuite = /** @class */ (function () {
    function TestSuite() {
        this.name = '';
        this.isValid = false;
        this.hasFailures = false;
        this.hasSoloTests = false;
        this.hasIgnoredTests = false;
        this.hasSoloGroups = false;
        this.isSolo = false;
        this.isIgnored = false;
        this.itGroups = [];
        this.setupFunctionName = '';
        this.tearDownFunctionName = '';
        this.isNodeTest = false;
        this.nodeTestFileName = '';
        this.isLegacy = false;
    }
    TestSuite.prototype.asJson = function () {
        return {
            name: this.name,
            filePath: this.filePath,
            valid: this.isValid,
            hasFailures: this.hasFailures,
            hasSoloTests: this.hasSoloTests,
            hasIgnoredTests: this.hasIgnoredTests,
            hasSoloGroups: this.hasSoloGroups,
            isSolo: this.isSolo,
            isIgnored: this.isIgnored,
            itGroups: this.itGroups.filter(function (itGroup) { return itGroup.isIncluded; })
                .map(function (itGroup) { return itGroup.asJson(); }),
            setupFunctionName: this.setupFunctionName,
            tearDownFunctionName: this.tearDownFunctionName,
            isNodeTest: this.isNodeTest,
            nodeTestFileName: this.nodeTestFileName,
            beforeEachFunctionName: this.beforeEachFunctionName,
            afterEachFunctionName: this.afterEachFunctionName,
        };
    };
    TestSuite.prototype.asText = function () {
        var itGroups = this.itGroups.filter(function (itGroup) { return itGroup.isIncluded; })
            .map(function (itGroup) { return itGroup.asText(); });
        return "{\n      name: \"" + this.name + "\"\n      filePath: \"" + this.filePath + "\"\n      valid: " + this.isValid + "\n      hasFailures: " + this.hasFailures + "\n      hasSoloTests: " + this.hasSoloTests + "\n      hasIgnoredTests: " + this.hasIgnoredTests + "\n      hasSoloGroups: " + this.hasSoloGroups + "\n      isSolo: " + this.isSolo + "\n      isIgnored: " + this.isIgnored + "\n      itGroups: [" + itGroups + "]\n      setupFunctionName: \"" + (this.setupFunctionName || '') + "\"\n      tearDownFunctionName: \"" + (this.tearDownFunctionName || '') + "\"\n      isNodeTest: " + this.isNodeTest + "\n      isLegacy: " + this.isLegacy + "\n      nodeTestFileName: \"" + (this.nodeTestFileName || '') + "\"\n      beforeEachFunctionName: \"" + (this.beforeEachFunctionName || '') + "\"\n      afterEachFunctionName: \"" + (this.afterEachFunctionName || '') + "\"\n    }";
    };
    return TestSuite;
}());
exports.TestSuite = TestSuite;
